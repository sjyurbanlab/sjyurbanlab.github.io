{"version":3,"sources":["webpack:///./src/pages/members/alumni.tsx"],"names":["Alumni","data","otherAlumniExist","Boolean","mdx","rawBody","otherAlumni","body","linkTitles","alumnusGroupsData","map","groupName","push","linksRef","useRef","createRef","title","className","index","members","ref","current","key","member","length"],"mappings":"2FAAA,gJAgBe,SAASA,EAAT,GAAuC,QAArBC,EAAqB,EAArBA,KACzBC,EAAmBC,QAAO,UAACF,EAAKG,WAAN,aAAC,EAAUC,SACrCC,EAAW,UAAGL,EAAKG,WAAR,aAAG,EAAUG,KAExBC,EAAuBC,IAAkBC,KAC7C,qBAAGC,aAEDT,GAAkBM,EAAWI,KAAK,gBAGtC,IAAMC,EAAWC,iBAAYN,EAAWE,KAAI,kBAAMK,0BAElD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,WAEZ,yBAAKC,UAAW,aACd,kBAAC,IAAD,eAEA,kBAAC,IAAD,CAASJ,SAAUA,EAAUL,WAAYA,GACvC,yBAAKS,UAAW,aAEd,yBAAKA,UAAW,cACbR,IAAkBC,KAAI,WAAyBQ,GAAzB,IAAGP,EAAH,EAAGA,UAAWQ,EAAd,EAAcA,QAAd,OACrB,yBAAKC,IAAKP,EAASQ,QAAQH,GAAQI,IAAKJ,GACtC,kBAAC,IAAD,KAAWP,GACX,yBAAKM,UAAW,kBACbE,EAAQT,KAAI,SAACa,EAAQL,GAAT,OACX,yBAAKI,IAAKJ,GACR,kBAAC,IAAD,CAAYK,OAAQA,cAS/BrB,GAAoBI,GACnB,yBAAKc,IAAKP,EAASQ,QAAQb,EAAWgB,OAAS,IAC7C,kBAAC,cAAD,KAAclB","file":"component---src-pages-members-alumni-tsx-0009356a4c1229d8fd52.js","sourcesContent":["import React, { createRef, useRef } from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { OtherAlumniMdxQuery } from '../../../graphql-types';\n\nimport Layout from '@src/Layout';\nimport { SEO } from '@components/layout';\nimport { SubTitle, Sidebar, Title } from '@components/generic';\nimport { MemberCard } from '@components/members';\n\nimport { alumnusGroupsData } from '@assets/data';\n\ninterface AlumniProps {\n  data: OtherAlumniMdxQuery;\n}\n\nexport default function Alumni({ data }: AlumniProps) {\n  const otherAlumniExist = Boolean(data.mdx?.rawBody);\n  const otherAlumni = data.mdx?.body;\n\n  const linkTitles: string[] = alumnusGroupsData.map(\n    ({ groupName }) => groupName\n  );\n  if (otherAlumniExist) linkTitles.push('Other Alumni');\n\n  // sidebar link refs\n  const linksRef = useRef<any>(linkTitles.map(() => createRef()));\n\n  return (\n    <Layout>\n      <SEO title={'Alumni'} />\n\n      <div className={'space-y-6'}>\n        <Title>Alumni</Title>\n\n        <Sidebar linksRef={linksRef} linkTitles={linkTitles}>\n          <div className={'space-y-8'}>\n            {/* alumni (json) */}\n            <div className={'space-y-12'}>\n              {alumnusGroupsData.map(({ groupName, members }, index) => (\n                <div ref={linksRef.current[index]} key={index}>\n                  <SubTitle>{groupName}</SubTitle>\n                  <div className={'mt-4 space-y-8'}>\n                    {members.map((member, index) => (\n                      <div key={index}>\n                        <MemberCard member={member} />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* members (mdx) */}\n            {otherAlumniExist && otherAlumni && (\n              <div ref={linksRef.current[linkTitles.length - 1]}>\n                <MDXRenderer>{otherAlumni}</MDXRenderer>\n              </div>\n            )}\n          </div>\n        </Sidebar>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query OtherAlumniMdx {\n    mdx(fileAbsolutePath: { regex: \"/OtherAlumni/\" }) {\n      body\n      rawBody\n    }\n  }\n`;\n"],"sourceRoot":""}