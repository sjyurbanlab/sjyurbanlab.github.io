{"version":3,"sources":["webpack:///./src/pages/members/present.tsx"],"names":["Present","data","otherMembersExist","Boolean","mdx","rawBody","otherMembers","body","linkTitles","concat","memberGroupsData","map","groupName","push","linksRef","useRef","createRef","title","className","ref","current","labLead","labLeadData","index","members","key","member","length"],"mappings":"2FAAA,gJAgBe,SAASA,EAAT,GAAyC,QAAtBC,EAAsB,EAAtBA,KAC1BC,EAAoBC,QAAO,UAACF,EAAKG,WAAN,aAAC,EAAUC,SACtCC,EAAY,UAAGL,EAAKG,WAAR,aAAG,EAAUG,KAEzBC,EAAuB,CAAC,YAAYC,OACxCC,IAAiBC,KAAI,qBAAGC,cAEtBV,GAAmBM,EAAWK,KAAK,4BAGvC,IAAMC,EAAWC,iBAAYP,EAAWG,KAAI,kBAAMK,0BAElD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,oBAEZ,yBAAKC,UAAW,aACd,kBAAC,IAAD,wBAEA,kBAAC,IAAD,CAASJ,SAAUA,EAAUN,WAAYA,GACvC,yBAAKU,UAAW,aAEd,yBAAKC,IAAKL,EAASM,QAAQ,IACzB,kBAAC,IAAD,CAAaC,QAASC,OAIxB,yBAAKJ,UAAW,cACbR,IAAiBC,KAAI,WAAyBY,GAAzB,IAAGX,EAAH,EAAGA,UAAWY,EAAd,EAAcA,QAAd,OACpB,yBAAKL,IAAKL,EAASM,QAAQG,EAAQ,GAAIE,IAAKF,GAC1C,kBAAC,IAAD,KAAWX,GACX,yBAAKM,UAAW,kBACbM,EAAQb,KAAI,SAACe,EAAQH,GAAT,OACX,yBAAKE,IAAKF,GACR,kBAAC,IAAD,CAAYG,OAAQA,cAS/BxB,GAAqBI,GACpB,yBAAKa,IAAKL,EAASM,QAAQZ,EAAWmB,OAAS,IAC7C,kBAAC,cAAD,KAAcrB","file":"component---src-pages-members-present-tsx-b6de6f6472ac09415ad7.js","sourcesContent":["import React, { createRef, useRef } from 'react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { OtherMembersMdxQuery } from '../../../graphql-types';\n\nimport Layout from '@src/Layout';\nimport { SEO } from '@components/layout';\nimport { SubTitle, Sidebar, Title } from '@components/generic';\nimport { MemberCard, LabLeadCard } from '@components/members';\n\nimport { labLeadData, memberGroupsData } from '@assets/data';\n\ninterface PresentProps {\n  data: OtherMembersMdxQuery;\n}\n\nexport default function Present({ data }: PresentProps) {\n  const otherMembersExist = Boolean(data.mdx?.rawBody);\n  const otherMembers = data.mdx?.body;\n\n  const linkTitles: string[] = ['Lab Lead'].concat(\n    memberGroupsData.map(({ groupName }) => groupName)\n  );\n  if (otherMembersExist) linkTitles.push('Other Affiliated Members');\n\n  // sidebar link refs\n  const linksRef = useRef<any>(linkTitles.map(() => createRef()));\n\n  return (\n    <Layout>\n      <SEO title={'Present Members'} />\n\n      <div className={'space-y-6'}>\n        <Title>Present Members</Title>\n\n        <Sidebar linksRef={linksRef} linkTitles={linkTitles}>\n          <div className={'space-y-8'}>\n            {/* lab lead (json) */}\n            <div ref={linksRef.current[0]}>\n              <LabLeadCard labLead={labLeadData} />\n            </div>\n\n            {/* members (json) */}\n            <div className={'space-y-12'}>\n              {memberGroupsData.map(({ groupName, members }, index) => (\n                <div ref={linksRef.current[index + 1]} key={index}>\n                  <SubTitle>{groupName}</SubTitle>\n                  <div className={'mt-4 space-y-8'}>\n                    {members.map((member, index) => (\n                      <div key={index}>\n                        <MemberCard member={member} />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* other members (mdx) */}\n            {otherMembersExist && otherMembers && (\n              <div ref={linksRef.current[linkTitles.length - 1]}>\n                <MDXRenderer>{otherMembers}</MDXRenderer>\n              </div>\n            )}\n          </div>\n        </Sidebar>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query OtherMembersMdx {\n    mdx(fileAbsolutePath: { regex: \"/OtherMembers/\" }) {\n      body\n      rawBody\n    }\n  }\n`;\n"],"sourceRoot":""}