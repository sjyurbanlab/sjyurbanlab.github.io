{"version":3,"sources":["webpack:///./src/components/mdx/index.ts","webpack:///./src/components/mdx/Section.tsx","webpack:///./src/components/mdx/Link.tsx","webpack:///./src/components/mdx/Button.tsx","webpack:///./src/Layout.tsx","webpack:///./src/utilities/ViewportContext.ts","webpack:///./src/assets/data/members/labLead.data.ts","webpack:///./src/assets/data/members/members.data.ts","webpack:///./src/assets/data/home/carousel-images.data.ts","webpack:///./src/assets/data/home/news.data.ts","webpack:///./src/assets/data/home/additional-links.data.ts"],"names":["mdxComponents","GenericAppComponents","Section","children","className","largerSpacing","props","Link","shouldOverrideClassName","Button","Layout","useState","defaultLoading","loading","setLoading","defaultViewport","viewport","setViewport","useEffect","handleViewportChange","generateViewport","window","addEventListener","isLoading","removeEventListener","navBarBoxRef","useRef","navBarBox","useComponentBox","LoadingContext","Provider","value","ViewportContext","components","ref","style","zIndex","key","height","marginTop","width","isMobile","isMobileLandscape","innerWidth","innerHeight","createContext","labLeadData","avatar","rawLabLead","firstName","lastName","salutation","position","email","introduction","researchInterests","academicMemberships","professionalMemberships","teachingList","cv","membersData","Object","entries","rawMembers","map","member","id","Number","affiliationPeriodStart","Date","undefined","affiliationPeriodEnd","sort","a","b","carouselImages","rawImages","src","image","alt","title","news","rawNews","content","author","date","link","moment","isSameOrAfter","parseLinks","links","additionalLinks","publicationLinks","rawLinks","publications","otherLinks"],"mappings":"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","file":"6da74625c281c80644381bf60e83ce797b5c0029-1b17310f3474a34315f7.js","sourcesContent":["import * as GenericAppComponents from '@components/generic/app';\n\nimport { Section } from './Section';\nimport { Link } from './Link';\nimport { Button } from './Button';\n\nexport const mdxComponents = {\n  ...GenericAppComponents,\n  Section,\n  Link,\n  Button,\n};\n","import React, { FC, ReactNode } from 'react';\n\ninterface SectionProps {\n  children: ReactNode;\n  className?: string;\n  largerSpacing?: boolean;\n}\n\nexport const Section: FC<SectionProps> = ({\n  children,\n  className,\n  largerSpacing,\n  ...props\n}) => (\n  <div\n    className={`${largerSpacing ? 'mt-12' : 'mt-8'} ${className}`}\n    {...props}\n  >\n    {children}\n  </div>\n);\n","import React, { FC, ReactNode } from 'react';\n\ninterface LinkProps {\n  children: ReactNode;\n  className?: string;\n  shouldOverrideClassName?: boolean;\n}\n\nexport const Link: FC<LinkProps> = ({\n  children,\n  className,\n  shouldOverrideClassName,\n  ...props\n}) => (\n  <a\n    className={shouldOverrideClassName ? `${className}` : `${className}`}\n    {...props}\n  >\n    {children}\n  </a>\n);\n","import React, { FC, ReactNode } from 'react';\n\ninterface ButtonProps {\n  children: ReactNode;\n  className?: string;\n  shouldOverrideClassName?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = ({\n  children,\n  className,\n  shouldOverrideClassName,\n  ...props\n}) => (\n  <button\n    className={\n      shouldOverrideClassName\n        ? className\n        : `button button-emerald-green ${className}`\n    }\n    {...props}\n  >\n    {children}\n  </button>\n);\n","import React, { FC, useEffect, useRef, useState } from 'react';\n\nimport {\n  Loading,\n  defaultLoading,\n  LoadingContext,\n} from '@utilities/LoadingContext';\nimport {\n  defaultViewport,\n  generateViewport,\n  Viewport,\n  ViewportContext,\n} from '@utilities/ViewportContext';\nimport { useComponentBox } from '@hooks/useComponentBox';\n\nimport { MDXProvider } from '@mdx-js/react';\nimport { mdxComponents } from '@components/mdx';\n\nimport { SEO } from '@components/layout';\nimport { Footer, NavBar } from '@components/generic';\nimport { PageContainer } from '@components/layout';\n\nexport const Layout: FC = ({ children }) => {\n  const [loading, setLoading] = useState<Loading>(defaultLoading);\n\n  const [viewport, setViewport] = useState<Viewport>(defaultViewport);\n\n  useEffect(() => {\n    const handleViewportChange = () => setViewport(generateViewport(window));\n    window.addEventListener('resize', handleViewportChange);\n    setLoading({ isLoading: false });\n    return () => window.removeEventListener('resize', handleViewportChange);\n  }, []);\n\n  const navBarBoxRef = useRef(null);\n  const navBarBox = useComponentBox(navBarBoxRef);\n\n  return (\n    <LoadingContext.Provider value={loading}>\n      <ViewportContext.Provider value={viewport}>\n        <MDXProvider components={mdxComponents}>\n          <SEO />\n\n          <div className={'text-sm sm:text-base bg-white text-jet-black'}>\n            <div\n              ref={navBarBoxRef}\n              className={'fixed w-full top-0 left-0 bg-white'}\n              style={{ zIndex: 999 }}\n            >\n              <NavBar />\n            </div>\n\n            <div\n              key={`box-${navBarBox?.height || 75}`}\n              className={'flex flex-col min-h-screen'}\n              style={{ marginTop: navBarBox?.height || 75 }}\n            >\n              <div className={'text-jet-black text-sm md:text-base'}>\n                <PageContainer>{children}</PageContainer>\n              </div>\n\n              <div className={'mt-auto'}>\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </MDXProvider>\n      </ViewportContext.Provider>\n    </LoadingContext.Provider>\n  );\n};\n\nexport default Layout;\n","import { createContext } from 'react';\n\nexport type Viewport = {\n  width: number;\n  height: number;\n  isMobile: boolean;\n  isMobileLandscape: boolean;\n};\n\nexport const defaultViewport: Viewport = {\n  width: 0,\n  height: 0,\n  isMobile: false,\n  isMobileLandscape: false,\n};\n\nconst smBreakpoint = 640;\n\nexport const generateViewport = (window: Window): Viewport => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  isMobile: window.innerWidth < smBreakpoint,\n  isMobileLandscape: window.innerHeight < smBreakpoint,\n});\n\nexport const ViewportContext = createContext<Viewport>(defaultViewport);\n","import rawLabLead from './lab-lead.json';\nimport { LabLead } from '@src/types/labLead';\n\nexport const labLeadData: LabLead = {\n  avatar: rawLabLead['avatar'],\n  firstName: rawLabLead['firstName'],\n  lastName: rawLabLead['lastName'],\n  salutation: rawLabLead['salutation'],\n  position: rawLabLead['position'],\n  email: rawLabLead['email'],\n  introduction: rawLabLead['introduction'],\n  researchInterests: rawLabLead['researchInterests'],\n  academicMemberships: rawLabLead['academicMemberships'],\n  professionalMemberships: rawLabLead['professionalMemberships'],\n  teachingList: rawLabLead['teachingList'],\n  // @ts-ignore\n  cv: rawLabLead['cv'],\n};\n","import rawMembers from './members.json';\nimport { Member } from '@src/types/member';\n\nexport const membersData: Member[] = Object.entries(rawMembers)\n  .map(([key, member]) => ({\n    id: Number(key),\n    avatar: member.avatar,\n    firstName: member.firstName,\n    lastName: member.lastName,\n    // @ts-ignore\n    salutation: member.salutation,\n    position: member.position,\n    email: member.email,\n    introduction: member.introduction,\n    affiliationPeriodStart: member.affiliationPeriodStart\n      ? new Date(member.affiliationPeriodStart)\n      : undefined,\n    affiliationPeriodEnd: member.affiliationPeriodEnd\n      ? new Date(member.affiliationPeriodEnd)\n      : undefined,\n    cv: member.cv,\n  }))\n  .sort((a, b) => a.id - b.id);\n","import rawImages from './carousel-images.json';\nimport { CarouselImage } from '@src/types/carouselImage';\n\nexport const carouselImages: CarouselImage[] = Object.entries(rawImages)\n  .map(([key, value]) => ({\n    id: Number(key),\n    src: value.image,\n    alt: value.title,\n    title: value.title,\n  }))\n  .sort((a, b) => a.id - b.id);\n","import moment from 'moment';\nimport rawNews from './news.json';\nimport { News } from '@src/types/news';\n\nexport const news: News[] = Object.entries(rawNews)\n  .map(([key, value]) => ({\n    id: Number(key),\n    image: value.image,\n    title: value.title,\n    content: value.content,\n    author: value.author,\n    date: value.date,\n    link: value.link,\n  }))\n  .sort((a, b) => (moment(a.date).isSameOrAfter(moment(b.date)) ? -1 : 1));\n","import rawLinks from './additional-links.json';\nimport { AdditionalLinks, Link } from '@src/types/additionalLinks';\n\nconst parseLinks = (links: any): Link[] =>\n  Object.entries(links)\n    .map(([key, value]: [string, any]) => ({\n      id: Number(key),\n      link: value.link,\n      title: value.title,\n    }))\n    .sort((a, b) => a.id - b.id);\n\nexport const additionalLinks: AdditionalLinks = {\n  publicationLinks: rawLinks.publications\n    ? parseLinks(rawLinks.publications)\n    : [],\n  otherLinks: rawLinks.otherLinks && parseLinks(rawLinks.otherLinks),\n};\n"],"sourceRoot":""}