{"version":3,"sources":["utilities/ViewportContext.ts","components/generic/SVGImage.tsx","hooks/useViewport.ts","components/generic/nav/NavItem.tsx","components/pages/home/Home.tsx","components/pages/research/Research.tsx","components/pages/members/Card.tsx","utilities/placeholder.ts","static/members/members.data.ts","components/generic/app/Title.tsx","components/pages/members/Members.tsx","routes.tsx","components/generic/nav/navItems.tsx","components/layout/PageContainer.tsx","components/generic/nav/DesktopNavBar.tsx","components/generic/nav/MobileNavBar.tsx","components/generic/nav/NavBar.tsx","App.tsx","serviceWorker.ts","config/theme.ts","index.tsx"],"names":["generateViewport","window","width","innerWidth","height","innerHeight","isMobile","isMobileLandscape","ViewportContext","createContext","SVGImage","id","image","style","circle","svgStyle","viewBox","undefined","patternUnits","xlinkHref","preserveAspectRatio","fill","cx","cy","r","x","y","useViewport","useContext","NavItem","title","basePath","items","useState","isOpen","setIsOpen","Box","my","borderBottom","borderColor","fontSize","color","to","textDecoration","Text","fontWeight","ml","map","index","path","child","key","position","onMouseEnter","onMouseLeave","PseudoBox","_hover","py","m","textAlign","Menu","autoSelect","p","minW","w","border","backgroundColor","onClick","Home","Research","Card","member","avatar","firstName","lastName","salutation","email","introduction","affiliationPeriodStart","affiliationPeriodEnd","cv","fields","icon","size","component","Link","href","paragraph","concat","moment","format","cursor","borderRadius","target","rel","px","_focus","SimpleGrid","columns","spacing","gridColumn","h","borderWidth","mx","Flex","alignItems","direction","mr","membersData","Object","entries","rawMembers","Number","Date","Title","transition","Members","borderBottomLeftRadius","borderBottomRightRadius","routes","childrenRoutes","navItems","PageContainer","children","DesktopNavBar","navItem","flexGrow","length","VerticalDivider","MobileNavBar","show","setShow","Collapse","NavBar","App","viewport","setViewport","useEffect","handleViewportChange","addEventListener","removeEventListener","generatedRoutes","generateRoutes","parentPath","forEach","push","exact","Provider","value","Boolean","location","hostname","match","theme","defaultTheme","fontFamily","body","heading","mono","colors","100","200","300","400","500","600","700","800","900","Index","ThemeProvider","CSSReset","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6403edc.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport type Viewport = {\n  width: number;\n  height: number;\n  isMobile: boolean;\n  isMobileLandscape: boolean;\n};\n\nconst defaultViewport: Viewport = {\n  width: 0,\n  height: 0,\n  isMobile: false,\n  isMobileLandscape: false,\n};\n\nconst smBreakpoint = 480;\n\nexport const generateViewport = (window: Window): Viewport => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  isMobile: window.innerWidth < smBreakpoint,\n  isMobileLandscape: window.innerHeight < smBreakpoint,\n});\n\nexport const ViewportContext = createContext<Viewport>(defaultViewport);\n","import React, { CSSProperties, FunctionComponent } from 'react';\n\ninterface SVGImageProps {\n  id: number | string;\n  image: string;\n  className?: string;\n  style?: CSSProperties;\n  circle?: boolean;\n}\n\nexport const SVGImage: FunctionComponent<SVGImageProps> = ({\n  id,\n  image,\n  style,\n  circle,\n}) => {\n  const svgStyle: CSSProperties = style || {};\n  if (!style?.width) svgStyle.width = '100%';\n  if (!style?.height) svgStyle.height = '100%';\n\n  return (\n    <svg style={svgStyle} viewBox={circle ? `0 0 2 2` : undefined}>\n      <defs>\n        <pattern\n          id={`${id}-image`}\n          patternUnits={'objectBoundingBox'}\n          width={'100%'}\n          height={'100%'}\n        >\n          <image\n            xlinkHref={image}\n            width={'100%'}\n            height={'100%'}\n            preserveAspectRatio={'xMidYMid slice'}\n          />\n        </pattern>\n      </defs>\n\n      {circle ? (\n        <circle fill={`url(#${id}-image)`} cx={'1'} cy={'1'} r={'1'} />\n      ) : (\n        <rect\n          fill={`url(#${id}-image)`}\n          x={'0%'}\n          y={'0%'}\n          width={'100%'}\n          height={'100%'}\n        />\n      )}\n    </svg>\n  );\n};\n","import { useContext } from 'react';\nimport { ViewportContext } from '../utilities/ViewportContext';\n\nexport const useViewport = () => useContext(ViewportContext);\n","import React, { FC, ReactNode, useState } from 'react';\nimport {\n  Box,\n  Menu,\n  MenuItem,\n  MenuList,\n  PseudoBox,\n  Text,\n} from '@chakra-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useViewport } from '../../../hooks';\n\nexport interface NavItemProps {\n  title: string;\n  basePath: string;\n  items?: { path: string; child: ReactNode }[];\n}\n\nexport const NavItem: FC<NavItemProps> = ({ title, basePath, items }) => {\n  const { isMobile } = useViewport();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      {!isMobile ? (\n        // desktop version nav item\n        <Box\n          position={'relative'}\n          onMouseEnter={() => setIsOpen(true)}\n          onMouseLeave={() => setIsOpen(false)}\n          color={'jet-black.500'}\n        >\n          <Link\n            to={basePath}\n            style={{ textDecoration: 'none', color: 'inherit' }}\n          >\n            <PseudoBox\n              _hover={{ borderColor: 'emerald-green.500' }}\n              borderBottom={'2px'}\n              borderColor={'transparent'}\n              py={1}\n              fontSize={['md', 'lg']}\n              fontWeight={'bold'}\n            >\n              <Text m={0} textAlign={'center'}>\n                {title}\n              </Text>\n            </PseudoBox>\n          </Link>\n          {items && (\n            <Menu isOpen={isOpen} autoSelect={false}>\n              <MenuList p={0} minW={'8rem'} w={'100%'}>\n                {items.map(({ path, child }, index) => (\n                  <MenuItem\n                    key={index}\n                    border={'none'}\n                    backgroundColor={'transparent'}\n                  >\n                    <Link\n                      to={`${basePath}${path}`}\n                      style={{\n                        textDecoration: 'none',\n                        color: 'inherit',\n                        width: '100%',\n                      }}\n                      onClick={() => setIsOpen(false)}\n                    >\n                      {child}\n                    </Link>\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </Menu>\n          )}\n        </Box>\n      ) : (\n        // mobile version nav item\n        <Box\n          my={1}\n          borderBottom={'1px'}\n          borderColor={'emerald-green.400'}\n          fontSize={'md'}\n          color={'jet-black.500'}\n        >\n          <Link\n            to={basePath}\n            style={{ textDecoration: 'none', color: 'inherit' }}\n          >\n            <Text my={1} fontWeight={'600'}>\n              {title}\n            </Text>\n          </Link>\n          <Box ml={3}>\n            {items?.map(({ path, child }, index) => (\n              <Box key={index} my={1} fontWeight={'400'}>\n                <Link\n                  key={index}\n                  to={`${basePath}${path}`}\n                  style={{\n                    textDecoration: 'none',\n                    color: 'inherit',\n                    width: '100%',\n                  }}\n                >\n                  {child}\n                </Link>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Text } from '@chakra-ui/core';\n\nexport const Home: FC = () => {\n  return <Text>home</Text>;\n};\n","import React, { FC } from 'react';\n\nexport const Research: FC = () => {\n  return <>research</>;\n};\n","import React, { FC } from 'react';\nimport moment from 'moment';\nimport { Box, Flex, Link, PseudoBox, SimpleGrid, Text } from '@chakra-ui/core';\nimport { Calendar, Coffee, FileText, Mail } from 'react-feather';\nimport { Member } from '../../../types/member';\nimport { SVGImage } from '../../generic';\nimport { avatarPlaceholder } from '../../../utilities';\n\ninterface CardProps {\n  member: Member;\n}\n\nexport const Card: FC<CardProps> = ({\n  member: {\n    id,\n    avatar,\n    firstName,\n    lastName,\n    salutation,\n    position,\n    email,\n    introduction,\n    affiliationPeriodStart,\n    affiliationPeriodEnd,\n    cv,\n  },\n}) => {\n  const iconSize = '24px';\n\n  const fields = [\n    {\n      icon: <Mail size={iconSize} />,\n      component: (\n        <Link\n          href={`mailto:${email}`}\n          color={'tory-blue.500'}\n          fontWeight={'600'}\n        >\n          {email}\n        </Link>\n      ),\n    },\n    {\n      icon: <Coffee size={iconSize} />,\n      component: introduction.map((paragraph, index) => (\n        <Text key={index}>{paragraph}</Text>\n      )),\n    },\n  ]\n    .concat(\n      affiliationPeriodStart\n        ? [\n            {\n              icon: <Calendar size={iconSize} />,\n              component: (\n                <Text>{`Affiliated since ${moment(\n                  affiliationPeriodStart\n                ).format('DD MMMM YYYY')} ${\n                  affiliationPeriodEnd\n                    ? ` till ${moment(affiliationPeriodEnd).format(\n                        'DD MMMM YYYY'\n                      )}`\n                    : ``\n                }`}</Text>\n              ),\n            },\n          ]\n        : []\n    )\n    .concat(\n      cv\n        ? [\n            {\n              icon: <FileText size={iconSize} />,\n              component: (\n                <PseudoBox\n                  backgroundColor={'emerald-green.500'}\n                  color={'white'}\n                  _hover={{\n                    cursor: 'pointer',\n                    backgroundColor: 'emerald-green.400',\n                  }}\n                  borderRadius={8}\n                  py={2}\n                >\n                  <Link\n                    href={cv}\n                    target={'_blank'}\n                    rel={'noopener noreferrer'}\n                    px={8}\n                    _hover={{ textDecoration: 'none' }}\n                    _focus={{ border: 'none' }}\n                  >\n                    Get CV\n                  </Link>\n                </PseudoBox>\n              ),\n            },\n          ]\n        : []\n    );\n\n  return (\n    <SimpleGrid columns={[1, 3, 3, 4]} spacing={8}>\n      <Box\n        gridColumn={'span 1'}\n        h={'fit-content'}\n        borderWidth={4}\n        borderRadius={'50%'}\n        borderColor={'emerald-green.500'}\n        my={2}\n        mx={[8, 2]}\n      >\n        <SVGImage\n          id={id}\n          image={avatar || avatarPlaceholder}\n          style={{ height: 'auto', width: '100%' }}\n          circle\n        />\n      </Box>\n      <Box gridColumn={['span 1', 'span 2', 'span 2', 'span 3']}>\n        <Flex\n          alignItems={['left', 'left', 'center']}\n          direction={['column', 'column', 'row']}\n        >\n          <Text fontSize={'xl'} fontWeight={'bold'}>{`${\n            salutation ? `${salutation} ` : ``\n          }${firstName} ${lastName}`}</Text>\n\n          <Text fontWeight={'thin'} mx={[0, 0, 2]}>\n            {position}\n          </Text>\n        </Flex>\n\n        <Box my={2}>\n          {fields.map(({ icon, component }, index) => (\n            <Flex key={index} alignItems={'center'} my={2}>\n              <Box color={'emerald-green.500'} mr={[4, 6]}>\n                {icon}\n              </Box>\n              <Box>{component}</Box>\n            </Flex>\n          ))}\n        </Box>\n      </Box>\n    </SimpleGrid>\n  );\n};\n","export const avatarPlaceholder = `https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTxsIVGXUz77jSd-Zgau2ZqRpL_STVm4gbxWQ&usqp=CAU`;\n","import rawMembers from './members.json';\nimport { Member } from '../../types/member';\n\nexport const membersData: Member[] = Object.entries(rawMembers).map(\n  ([key, member]) => ({\n    id: Number(key),\n    avatar: member['avatar'],\n    firstName: member['firstName'],\n    lastName: member['lastName'],\n    salutation: member['salutation'],\n    position: member['position'],\n    email: member['email'],\n    introduction: member['introduction'],\n    affiliationPeriodStart: member['affiliationPeriodStart']\n      ? new Date(member['affiliationPeriodStart'])\n      : undefined,\n    affiliationPeriodEnd: member['affiliationPeriodEnd']\n      ? new Date(member['affiliationPeriodEnd'])\n      : undefined,\n    cv: member['cv'],\n  })\n);\n","import React, { FC } from 'react';\nimport { PseudoBox, Text } from '@chakra-ui/core';\n\ninterface TitleProps {\n  title: string;\n  style?: object;\n}\n\nexport const Title: FC<TitleProps> = ({ title, style }) => (\n  <PseudoBox\n    width={'fit-content'}\n    borderBottom={'2px'}\n    borderColor={'transparent'}\n    _hover={{\n      transition: 'border-color 0.5s ease-in-out',\n      borderColor: 'emerald-green.500',\n    }}\n  >\n    <Text fontSize={'3xl'} style={style}>\n      {title}\n    </Text>\n  </PseudoBox>\n);\n","import React, { FC } from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { Card } from './Card';\nimport { membersData } from '../../../static';\nimport { Title } from '../../generic/app/Title';\nimport { SVGImage } from '../../generic';\n\nconst backdropImage = `https://www.wysersolutions.com/wp-content/uploads/2017/04/people-working-together-in-meeting.jpg`;\n\nexport const Members: FC = () => {\n  return (\n    <Box>\n      <SVGImage\n        id={'backdrop'}\n        image={backdropImage}\n        style={{\n          width: '100%',\n          height: '250px',\n          borderBottomLeftRadius: '20px',\n          borderBottomRightRadius: '20px',\n        }}\n      />\n\n      <Box my={4}>\n        <Title title={'Key Members'} />\n\n        {membersData.map((member, index) => (\n          <Box key={index} my={6}>\n            <Card member={member} />\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { Home, Research, Members } from './components/pages';\n\nexport type Route = {\n  path: string;\n  title: string;\n  component?: ReactNode;\n  childrenRoutes?: Route[];\n};\n\nexport const routes: Route[] = [\n  {\n    path: '/home',\n    title: 'Home',\n    component: <Home />,\n  },\n  {\n    path: '/research',\n    title: 'Research',\n    component: <Research />,\n    childrenRoutes: [\n      { path: '/themes', title: ' Themes' },\n      { path: '/ongoing-projects', title: 'Ongoing Projects' },\n      { path: '/past-projects', title: 'Past Projects' },\n      { path: '/publications', title: ' Publications' },\n      { path: '/funding', title: ' Funding' },\n    ],\n  },\n  {\n    path: '/members',\n    title: 'Members',\n    component: <Members />,\n  },\n  {\n    path: '/teaching',\n    title: 'Teaching',\n  },\n  {\n    path: '/activities',\n    title: 'Team Activities',\n  },\n  {\n    path: '/contact-us',\n    title: 'Contact-Us',\n  },\n];\n","import React from 'react';\nimport { Text } from '@chakra-ui/core';\nimport { NavItem, NavItemProps } from './NavItem';\nimport { routes } from '../../../routes';\n\nexport const navItemsProps: NavItemProps[] = routes.map(\n  ({ path, title, childrenRoutes }) => ({\n    basePath: path,\n    title,\n    items: childrenRoutes?.map(({ path, title }) => ({\n      path,\n      child: <Text>{title}</Text>,\n    })),\n  })\n);\n\nexport const navItems = navItemsProps.map(({ title, basePath, items }) => (\n  <NavItem title={title} basePath={basePath} items={items} />\n));\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Box } from '@chakra-ui/core';\n\ninterface PageContainerProps {\n  children: ReactNode;\n}\n\nexport const PageContainer: FunctionComponent<PageContainerProps> = ({\n  children,\n}) => (\n  <Box w={['95%', '92%', '85%', '70%']} mx={'auto'} py={[2, 2, 3, 4]}>\n    {children}\n  </Box>\n);\n","import React, { FC, Fragment } from 'react';\nimport { Box, Flex } from '@chakra-ui/core';\nimport { navItems } from './navItems';\nimport { PageContainer } from '../../layout';\n\nexport const DesktopNavBar: FC = () => {\n  return (\n    <PageContainer>\n      <Flex w={'100%'} alignItems={'center'}>\n        {navItems.map((navItem, index) => (\n          <Fragment key={index}>\n            <Box flexGrow={1} mx={'auto'}>\n              {navItem}\n            </Box>\n            {index !== navItems.length - 1 && <VerticalDivider />}\n          </Fragment>\n        ))}\n      </Flex>\n    </PageContainer>\n  );\n};\n\nconst VerticalDivider = () => (\n  <Box w={'2px'} h={8} mx={3} backgroundColor={'jet-black.400'} />\n);\n","import React, { FC, useState } from 'react';\nimport { Box, Collapse, Flex, Text } from '@chakra-ui/core';\nimport { AlignJustify, X } from 'react-feather';\nimport { navItems } from './navItems';\n\nexport const MobileNavBar: FC = () => {\n  const [show, setShow] = useState<boolean>(false);\n\n  return (\n    <Box position={'relative'}>\n      <Flex\n        w={'100%'}\n        backgroundColor={'emerald-green.500'}\n        py={2}\n        px={3}\n        alignItems={'center'}\n        color={'white'}\n      >\n        <Box w={'fit-content'} onClick={() => setShow(!show)} mx={2}>\n          {!show ? <AlignJustify size={'30px'} /> : <X size={'30px'} />}\n        </Box>\n        <Text mx={2} fontWeight={'bold'}>\n          Healthy Cities Lab at HKU\n        </Text>\n      </Flex>\n      <Collapse isOpen={show} position={'fixed'} w={'100%'}>\n        <Flex\n          w={'100%'}\n          backgroundColor={'white'}\n          px={3}\n          py={2}\n          direction={'column'}\n          onClick={() => setShow(false)}\n        >\n          {navItems.map((navItem, index) => (\n            <Box key={index} w={'100%'}>\n              {navItem}\n            </Box>\n          ))}\n        </Flex>\n      </Collapse>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useViewport } from '../../../hooks';\nimport { DesktopNavBar } from './DesktopNavBar';\nimport { MobileNavBar } from './MobileNavBar';\n\nexport const NavBar: FC = () => {\n  const { isMobile } = useViewport();\n\n  return <>{!isMobile ? <DesktopNavBar /> : <MobileNavBar />}</>;\n};\n","import React, { FC, ReactNode, useEffect, useState } from 'react';\nimport {\n  generateViewport,\n  Viewport,\n  ViewportContext,\n} from './utilities/ViewportContext';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { NavBar } from './components/generic';\nimport { PageContainer } from './components/layout';\nimport { Route as RouteType, routes } from './routes';\n\nconst App: FC = () => {\n  const [viewport, setViewport] = useState<Viewport>(generateViewport(window));\n\n  useEffect(() => {\n    const handleViewportChange = () => setViewport(generateViewport(window));\n    window.addEventListener('resize', handleViewportChange);\n    return () => window.removeEventListener('resize', handleViewportChange);\n  }, []);\n\n  // generate all page routes recursively\n  const generatedRoutes: ReactNode[] = [];\n\n  const generateRoutes = (routes: RouteType[], parentPath = ''): void => {\n    routes.forEach(({ path, component, childrenRoutes }) => {\n      generatedRoutes.push(\n        <Route\n          key={`${parentPath}${path}`}\n          exact\n          path={`${parentPath}${path}`}\n          component={() => <PageContainer>{component}</PageContainer>}\n        />\n      );\n      if (childrenRoutes?.length) generateRoutes(childrenRoutes, path);\n    });\n  };\n\n  generateRoutes(routes);\n\n  return (\n    <ViewportContext.Provider value={viewport}>\n      <Router>\n        <NavBar />\n        <Switch>\n          {generatedRoutes}\n          <Route path={'/'}>\n            <Redirect to={'/home'} />\n          </Route>\n          <Route path=\"*\" exact component={() => <Redirect to={'/'} />} />\n        </Switch>\n      </Router>\n    </ViewportContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { theme as defaultTheme } from '@chakra-ui/core';\n\nexport const theme = {\n  ...defaultTheme,\n  fontFamily: {\n    body: 'Nunito',\n    heading: 'Noto Serif',\n    mono: 'Inconsolata',\n  },\n  colors: {\n    ...defaultTheme.colors,\n    'emerald-green': {\n      100: '#EEFAF2',\n      200: '#D3F1DD',\n      300: '#B9E9C9',\n      400: '#85D9A1',\n      500: '#50C878',\n      600: '#48B46C',\n      700: '#307848',\n      800: '#245A36',\n      900: '#183C24',\n    },\n    'tory-blue': {\n      100: '#E8EDF6',\n      200: '#C4D1E7',\n      300: '#A1B5D9',\n      400: '#5B7EBD',\n      500: '#1446A0',\n      600: '#123F90',\n      700: '#0C2A60',\n      800: '#092048',\n      900: '#061530',\n    },\n    'cerise-red': {\n      100: '#FBEAF0',\n      200: '#F6CBDA',\n      300: '#F1ACC3',\n      400: '#E66E96',\n      500: '#DB3069',\n      600: '#C52B5F',\n      700: '#831D3F',\n      800: '#63162F',\n      900: '#420E20',\n    },\n    'mustard-yellow': {\n      100: '#FEFBED',\n      200: '#FDF5D1',\n      300: '#FBEEB5',\n      400: '#F8E27E',\n      500: '#F5D547',\n      600: '#DDC040',\n      700: '#93802B',\n      800: '#6E6020',\n      900: '#4A4015',\n    },\n    'jet-black': {\n      100: '#ECECEB',\n      200: '#CECECE',\n      300: '#B1B1B1',\n      400: '#777776',\n      500: '#3C3C3B',\n      600: '#363635',\n      700: '#242423',\n      800: '#1B1B1B',\n      900: '#121212',\n    },\n  },\n};\n","import React, { FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport { theme } from './config/theme';\n\nconst Index: FC = () => (\n  <ThemeProvider theme={theme}>\n    <CSSReset />\n    <App />\n  </ThemeProvider>\n);\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}