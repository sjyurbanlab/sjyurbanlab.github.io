{"version":3,"sources":["utilities/ViewportContext.ts","hooks/useViewport.ts","components/generic/nav/NavItem.tsx","components/layout/PageContainer.tsx","routes.tsx","components/pages/home/Home.tsx","components/pages/research/Research.tsx","components/generic/nav/navItems.tsx","components/generic/nav/DesktopNavBar.tsx","components/generic/nav/MobileNavBar.tsx","components/generic/nav/NavBar.tsx","App.tsx","serviceWorker.ts","config/theme.ts","index.tsx"],"names":["generateViewport","window","width","innerWidth","height","innerHeight","isMobile","isMobileLandscape","ViewportContext","createContext","useViewport","useContext","NavItem","title","basePath","items","useState","isOpen","setIsOpen","Box","my","borderBottom","borderColor","fontSize","color","to","style","textDecoration","Text","fontWeight","ml","map","index","path","child","key","onClick","position","onMouseEnter","onMouseLeave","PseudoBox","_hover","py","m","textAlign","Menu","autoSelect","p","minW","w","border","backgroundColor","PageContainer","children","mx","routes","component","childrenRoutes","navItems","DesktopNavBar","Flex","alignItems","navItem","flexGrow","length","VerticalDivider","h","MobileNavBar","show","setShow","px","size","Collapse","direction","NavBar","App","viewport","setViewport","useEffect","handleViewportChange","addEventListener","removeEventListener","generatedRoutes","generateRoutes","parentPath","forEach","push","exact","Provider","value","Boolean","location","hostname","match","theme","defaultTheme","fontFamily","body","heading","mono","colors","100","200","300","400","500","600","700","800","900","Index","ThemeProvider","CSSReset","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28b1147b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport type Viewport = {\n  width: number;\n  height: number;\n  isMobile: boolean;\n  isMobileLandscape: boolean;\n};\n\nconst defaultViewport: Viewport = {\n  width: 0,\n  height: 0,\n  isMobile: false,\n  isMobileLandscape: false,\n};\n\nconst smBreakpoint = 480;\n\nexport const generateViewport = (window: Window): Viewport => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  isMobile: window.innerWidth < smBreakpoint,\n  isMobileLandscape: window.innerHeight < smBreakpoint,\n});\n\nexport const ViewportContext = createContext<Viewport>(defaultViewport);\n","import { useContext } from 'react';\nimport { ViewportContext } from '../utilities/ViewportContext';\n\nexport const useViewport = () => useContext(ViewportContext);\n","import React, { FC, ReactNode, useState } from 'react';\nimport {\n  Box,\n  Menu,\n  MenuItem,\n  MenuList,\n  PseudoBox,\n  Text,\n} from '@chakra-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useViewport } from '../../../hooks';\n\nexport interface NavItemProps {\n  title: string;\n  basePath: string;\n  items?: { path: string; child: ReactNode }[];\n}\n\nexport const NavItem: FC<NavItemProps> = ({ title, basePath, items }) => {\n  const { isMobile } = useViewport();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      {!isMobile ? (\n        // desktop version nav item\n        <Box\n          position={'relative'}\n          onMouseEnter={() => setIsOpen(true)}\n          onMouseLeave={() => setIsOpen(false)}\n          color={'jet-black.500'}\n        >\n          <Link\n            to={basePath}\n            style={{ textDecoration: 'none', color: 'inherit' }}\n          >\n            <PseudoBox\n              _hover={{ borderColor: 'emerald-green.500' }}\n              borderBottom={'2px'}\n              borderColor={'transparent'}\n              py={1}\n              fontSize={['md', 'lg']}\n              fontWeight={'bold'}\n            >\n              <Text m={0} textAlign={'center'}>\n                {title}\n              </Text>\n            </PseudoBox>\n          </Link>\n          {items && (\n            <Menu isOpen={isOpen} autoSelect={false}>\n              <MenuList p={0} minW={'none'} w={'100%'}>\n                {items.map(({ path, child }, index) => (\n                  <MenuItem\n                    key={index}\n                    border={'none'}\n                    backgroundColor={'transparent'}\n                  >\n                    <Link\n                      to={`${basePath}${path}`}\n                      style={{\n                        textDecoration: 'none',\n                        color: 'inherit',\n                        width: '100%',\n                      }}\n                      onClick={() => setIsOpen(false)}\n                    >\n                      {child}\n                    </Link>\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </Menu>\n          )}\n        </Box>\n      ) : (\n        // mobile version nav item\n        <Box\n          my={1}\n          borderBottom={'1px'}\n          borderColor={'emerald-green.400'}\n          fontSize={'md'}\n          color={'jet-black.500'}\n        >\n          <Link\n            to={basePath}\n            style={{ textDecoration: 'none', color: 'inherit' }}\n          >\n            <Text my={1} fontWeight={'600'}>\n              {title}\n            </Text>\n          </Link>\n          <Box ml={3}>\n            {items?.map(({ path, child }, index) => (\n              <Box my={1} fontWeight={'400'}>\n                <Link\n                  key={index}\n                  to={`${basePath}${path}`}\n                  style={{\n                    textDecoration: 'none',\n                    color: 'inherit',\n                    width: '100%',\n                  }}\n                  onClick={() => setIsOpen(false)}\n                >\n                  {child}\n                </Link>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport { Box } from '@chakra-ui/core';\n\ninterface PageContainerProps {\n  children: ReactNode;\n}\n\nexport const PageContainer: FunctionComponent<PageContainerProps> = ({\n  children,\n}) => (\n  <Box w={['100%', '90%', '80%', '70%']} mx={'auto'} py={[2, 2, 3, 4]}>\n    {children}\n  </Box>\n);\n","import React from 'react';\n\nimport { Home, Research } from './components/pages';\nimport { RouteComponentProps } from 'react-router';\n\nexport type Route = {\n  path: string;\n  title: string;\n  component?:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  childrenRoutes?: Route[];\n};\n\nexport const routes: Route[] = [\n  {\n    path: '/home',\n    title: 'Home',\n    component: Home,\n  },\n  {\n    path: '/research',\n    title: 'Research',\n    component: Research,\n    childrenRoutes: [\n      { path: '/themes', title: ' Themes' },\n      { path: '/ongoing-projects', title: 'Ongoing Projects' },\n      { path: '/past-projects', title: 'Past Projects' },\n      { path: '/publications', title: ' Publications' },\n      { path: '/funding', title: ' Funding' },\n    ],\n  },\n  {\n    path: '/members',\n    title: 'Members',\n  },\n  {\n    path: '/teaching',\n    title: 'Teaching',\n  },\n  {\n    path: '/activities',\n    title: 'Team Activities',\n  },\n  {\n    path: '/contact-us',\n    title: 'Contact-Us',\n  },\n];\n","import React, { FC } from 'react';\nimport { PageContainer } from '../../layout';\nimport { Text } from '@chakra-ui/core';\n\nexport const Home: FC = () => {\n  return (\n    <PageContainer>\n      <Text>home</Text>\n    </PageContainer>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const Research: FC = () => {\n  return <>research</>;\n};\n","import React from 'react';\nimport { Text } from '@chakra-ui/core';\nimport { NavItem, NavItemProps } from './NavItem';\nimport { routes } from '../../../routes';\n\nexport const navItemsProps: NavItemProps[] = routes.map(\n  ({ path, title, childrenRoutes }) => ({\n    basePath: path,\n    title,\n    items: childrenRoutes?.map(({ path, title }) => ({\n      path,\n      child: <Text>{title}</Text>,\n    })),\n  })\n);\n\nexport const navItems = navItemsProps.map(({ title, basePath, items }) => (\n  <NavItem title={title} basePath={basePath} items={items} />\n));\n","import React, { FC, Fragment } from 'react';\nimport { Box, Flex } from '@chakra-ui/core';\nimport { navItems } from './navItems';\nimport { PageContainer } from '../../layout';\n\nexport const DesktopNavBar: FC = () => {\n  return (\n    <PageContainer>\n      <Flex w={'100%'} alignItems={'center'}>\n        {navItems.map((navItem, index) => (\n          <Fragment key={index}>\n            <Box flexGrow={1} mx={'auto'}>\n              {navItem}\n            </Box>\n            {index !== navItems.length - 1 && <VerticalDivider />}\n          </Fragment>\n        ))}\n      </Flex>\n    </PageContainer>\n  );\n};\n\nconst VerticalDivider = () => (\n  <Box w={'2px'} h={8} mx={3} backgroundColor={'jet-black.400'} />\n);\n","import React, { FC, useState } from 'react';\nimport { Box, Collapse, Flex, Text } from '@chakra-ui/core';\nimport { AlignJustify, X } from 'react-feather';\nimport { navItems } from './navItems';\n\nexport const MobileNavBar: FC = () => {\n  const [show, setShow] = useState<boolean>(false);\n\n  return (\n    <Box position={'relative'}>\n      <Flex\n        w={'100%'}\n        backgroundColor={'emerald-green.500'}\n        py={2}\n        px={3}\n        alignItems={'center'}\n        color={'white'}\n      >\n        <Box w={'fit-content'} onClick={() => setShow(!show)} mx={2}>\n          {!show ? <AlignJustify size={'30px'} /> : <X size={'30px'} />}\n        </Box>\n        <Text mx={2} fontWeight={'bold'}>\n          Healthy Cities Lab at HKU\n        </Text>\n      </Flex>\n      <Collapse isOpen={show} position={'fixed'} w={'100%'}>\n        <Flex\n          w={'100%'}\n          backgroundColor={'white'}\n          px={3}\n          py={2}\n          direction={'column'}\n        >\n          {navItems.map((navItem, index) => (\n            <Box key={index} w={'100%'}>\n              {navItem}\n            </Box>\n          ))}\n        </Flex>\n      </Collapse>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useViewport } from '../../../hooks';\nimport { DesktopNavBar } from './DesktopNavBar';\nimport { MobileNavBar } from './MobileNavBar';\n\nexport const NavBar: FC = () => {\n  const { isMobile } = useViewport();\n\n  return <>{!isMobile ? <DesktopNavBar /> : <MobileNavBar />}</>;\n};\n","import React, { FC, ReactNode, useEffect, useState } from 'react';\nimport {\n  generateViewport,\n  Viewport,\n  ViewportContext,\n} from './utilities/ViewportContext';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { NavBar } from './components/generic';\nimport { Route as RouteType, routes } from './routes';\n\nconst App: FC = () => {\n  const [viewport, setViewport] = useState<Viewport>(generateViewport(window));\n\n  useEffect(() => {\n    const handleViewportChange = () => setViewport(generateViewport(window));\n    window.addEventListener('resize', handleViewportChange);\n    return () => window.removeEventListener('resize', handleViewportChange);\n  }, []);\n\n  // generate all page routes recursively\n  const generatedRoutes: ReactNode[] = [];\n\n  const generateRoutes = (routes: RouteType[], parentPath = ''): void => {\n    routes.forEach(({ path, component, childrenRoutes }) => {\n      generatedRoutes.push(\n        <Route\n          key={`${parentPath}${path}`}\n          exact\n          path={`${parentPath}${path}`}\n          component={component}\n        />\n      );\n      if (childrenRoutes?.length) generateRoutes(childrenRoutes, path);\n    });\n  };\n\n  generateRoutes(routes);\n\n  return (\n    <ViewportContext.Provider value={viewport}>\n      <Router>\n        <NavBar />\n        <Switch>\n          {generatedRoutes}\n          <Route path={'/'}>\n            <Redirect to={'/home'} />\n          </Route>\n          <Route path=\"*\" exact component={() => <Redirect to={'/'} />} />\n        </Switch>\n      </Router>\n    </ViewportContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { theme as defaultTheme } from '@chakra-ui/core';\n\nexport const theme = {\n  ...defaultTheme,\n  fontFamily: {\n    body: 'Nunito',\n    heading: 'Noto Serif',\n    mono: 'Inconsolata',\n  },\n  colors: {\n    ...defaultTheme.colors,\n    'emerald-green': {\n      100: '#EEFAF2',\n      200: '#D3F1DD',\n      300: '#B9E9C9',\n      400: '#85D9A1',\n      500: '#50C878',\n      600: '#48B46C',\n      700: '#307848',\n      800: '#245A36',\n      900: '#183C24',\n    },\n    'tory-blue': {\n      100: '#E8EDF6',\n      200: '#C4D1E7',\n      300: '#A1B5D9',\n      400: '#5B7EBD',\n      500: '#1446A0',\n      600: '#123F90',\n      700: '#0C2A60',\n      800: '#092048',\n      900: '#061530',\n    },\n    'cerise-red': {\n      100: '#FBEAF0',\n      200: '#F6CBDA',\n      300: '#F1ACC3',\n      400: '#E66E96',\n      500: '#DB3069',\n      600: '#C52B5F',\n      700: '#831D3F',\n      800: '#63162F',\n      900: '#420E20',\n    },\n    'mustard-yellow': {\n      100: '#FEFBED',\n      200: '#FDF5D1',\n      300: '#FBEEB5',\n      400: '#F8E27E',\n      500: '#F5D547',\n      600: '#DDC040',\n      700: '#93802B',\n      800: '#6E6020',\n      900: '#4A4015',\n    },\n    'jet-black': {\n      100: '#ECECEB',\n      200: '#CECECE',\n      300: '#B1B1B1',\n      400: '#777776',\n      500: '#3C3C3B',\n      600: '#363635',\n      700: '#242423',\n      800: '#1B1B1B',\n      900: '#121212',\n    },\n  },\n};\n","import React, { FC } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport { theme } from './config/theme';\n\nconst Index: FC = () => (\n  <ThemeProvider theme={theme}>\n    <CSSReset />\n    <App />\n  </ThemeProvider>\n);\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}